{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jashi\\\\OneDrive\\\\Desktop\\\\Sparkathon\\\\walmart-spark\\\\src\\\\components\\\\MultiHopDelivery.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from './ui/card';\nimport { Button } from './ui/button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MultiHopDelivery = () => {\n  _s();\n  const [config, setConfig] = useState({\n    packages: 5,\n    congestion: 'medium',\n    priority: 'time',\n    algorithm: 'astar'\n  });\n  const [networkData, setNetworkData] = useState({\n    nodes: [],\n    edges: [],\n    packages: [],\n    routes: []\n  });\n  const [optimizationResults, setOptimizationResults] = useState(null);\n  const [isOptimizing, setIsOptimizing] = useState(false);\n  const [isSimulating, setIsSimulating] = useState(false);\n  const canvasRef = useRef(null);\n\n  // Vehicle types with characteristics\n  const vehicleTypes = {\n    bike: {\n      emoji: '🚲',\n      speed: 12,\n      capacity: 3,\n      costPerKm: 1.5,\n      trafficImpact: 0.1,\n      maxRange: 5,\n      fuelCost: 0\n    },\n    scooter: {\n      emoji: '🛵',\n      speed: 22,\n      capacity: 8,\n      costPerKm: 2.5,\n      trafficImpact: 0.3,\n      maxRange: 15,\n      fuelCost: 0.8\n    },\n    van: {\n      emoji: '🚚',\n      speed: 28,\n      capacity: 50,\n      costPerKm: 6.5,\n      trafficImpact: 0.8,\n      maxRange: 100,\n      fuelCost: 1.2\n    },\n    truck: {\n      emoji: '🚛',\n      speed: 25,\n      capacity: 150,\n      costPerKm: 12.0,\n      trafficImpact: 1.0,\n      maxRange: 200,\n      fuelCost: 2.5\n    }\n  };\n  const nodeTypes = {\n    warehouse: {\n      emoji: '🏭',\n      color: '#e53e3e'\n    },\n    hub: {\n      emoji: '🏢',\n      color: '#3182ce'\n    },\n    transfer: {\n      emoji: '🔄',\n      color: '#38a169'\n    },\n    customer: {\n      emoji: '🏠',\n      color: '#d69e2e'\n    }\n  };\n\n  // Generate delivery network\n  const generateDeliveryNetwork = () => {\n    const numPackages = parseInt(config.packages);\n\n    // Generate nodes\n    const nodes = [{\n      id: 'warehouse',\n      type: 'warehouse',\n      x: 50,\n      y: 250\n    }, {\n      id: 'hub1',\n      type: 'hub',\n      x: 200,\n      y: 150\n    }, {\n      id: 'hub2',\n      type: 'hub',\n      x: 200,\n      y: 350\n    }, {\n      id: 'transfer1',\n      type: 'transfer',\n      x: 350,\n      y: 100\n    }, {\n      id: 'transfer2',\n      type: 'transfer',\n      x: 350,\n      y: 200\n    }, {\n      id: 'transfer3',\n      type: 'transfer',\n      x: 350,\n      y: 300\n    }, {\n      id: 'transfer4',\n      type: 'transfer',\n      x: 350,\n      y: 400\n    }];\n\n    // Generate customer nodes\n    const maxCustomers = Math.min(numPackages, 20);\n    for (let i = 0; i < maxCustomers; i++) {\n      nodes.push({\n        id: `customer${i + 1}`,\n        type: 'customer',\n        x: 500 + i % 4 * 80,\n        y: 80 + Math.floor(i / 4) * 70\n      });\n    }\n\n    // Generate edges\n    const edges = [{\n      from: 'warehouse',\n      to: 'hub1',\n      vehicle: 'truck'\n    }, {\n      from: 'warehouse',\n      to: 'hub2',\n      vehicle: 'truck'\n    }, {\n      from: 'hub1',\n      to: 'transfer1',\n      vehicle: 'van'\n    }, {\n      from: 'hub1',\n      to: 'transfer2',\n      vehicle: 'van'\n    }, {\n      from: 'hub2',\n      to: 'transfer3',\n      vehicle: 'van'\n    }, {\n      from: 'hub2',\n      to: 'transfer4',\n      vehicle: 'van'\n    }, {\n      from: 'hub1',\n      to: 'hub2',\n      vehicle: 'van'\n    }, {\n      from: 'transfer1',\n      to: 'transfer2',\n      vehicle: 'scooter'\n    }, {\n      from: 'transfer2',\n      to: 'transfer3',\n      vehicle: 'scooter'\n    }, {\n      from: 'transfer3',\n      to: 'transfer4',\n      vehicle: 'scooter'\n    }];\n\n    // Connect transfer points to customers\n    for (let i = 0; i < maxCustomers; i++) {\n      const transferPoint = `transfer${i % 4 + 1}`;\n      const customerNode = `customer${i + 1}`;\n      const vehicle = Math.random() < 0.7 ? 'bike' : 'scooter';\n      edges.push({\n        from: transferPoint,\n        to: customerNode,\n        vehicle\n      });\n    }\n\n    // Generate packages\n    const packages = [];\n    for (let i = 0; i < maxCustomers; i++) {\n      packages.push({\n        id: `pkg${i + 1}`,\n        from: 'warehouse',\n        to: `customer${i + 1}`,\n        weight: Math.random() * 5 + 1,\n        priority: Math.random() < 0.3 ? 'high' : 'normal'\n      });\n    }\n    setNetworkData({\n      nodes,\n      edges,\n      packages,\n      routes: []\n    });\n    setOptimizationResults(null);\n  };\n\n  // Render network visualization\n  const renderNetwork = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    const rect = canvas.getBoundingClientRect();\n\n    // Clear canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Draw edges\n    networkData.edges.forEach(edge => {\n      const fromNode = networkData.nodes.find(n => n.id === edge.from);\n      const toNode = networkData.nodes.find(n => n.id === edge.to);\n      if (fromNode && toNode) {\n        ctx.beginPath();\n        ctx.moveTo(fromNode.x, fromNode.y);\n        ctx.lineTo(toNode.x, toNode.y);\n        ctx.strokeStyle = '#cbd5e0';\n        ctx.lineWidth = 3;\n        ctx.stroke();\n      }\n    });\n\n    // Draw nodes\n    networkData.nodes.forEach(node => {\n      const nodeType = nodeTypes[node.type];\n      if (nodeType) {\n        // Draw circle\n        ctx.beginPath();\n        ctx.arc(node.x, node.y, 20, 0, 2 * Math.PI);\n        ctx.fillStyle = nodeType.color;\n        ctx.fill();\n\n        // Draw emoji (simplified as text)\n        ctx.fillStyle = 'white';\n        ctx.font = '16px Arial';\n        ctx.textAlign = 'center';\n        ctx.fillText(nodeType.emoji, node.x, node.y + 5);\n      }\n    });\n  };\n\n  // Calculate distance between nodes\n  const calculateDistance = (node1, node2) => {\n    const dx = node1.x - node2.x;\n    const dy = node1.y - node2.y;\n    return Math.sqrt(dx * dx + dy * dy) / 10;\n  };\n\n  // Simple pathfinding algorithm (simplified A*)\n  const findOptimalRoute = (start, end) => {\n    const graph = new Map();\n\n    // Build graph\n    networkData.nodes.forEach(node => {\n      graph.set(node.id, []);\n    });\n    networkData.edges.forEach(edge => {\n      const fromNode = networkData.nodes.find(n => n.id === edge.from);\n      const toNode = networkData.nodes.find(n => n.id === edge.to);\n      if (fromNode && toNode) {\n        const distance = calculateDistance(fromNode, toNode);\n        const vehicle = vehicleTypes[edge.vehicle];\n        graph.get(edge.from).push({\n          to: edge.to,\n          distance,\n          time: distance / vehicle.speed,\n          cost: distance * vehicle.costPerKm,\n          vehicle: edge.vehicle\n        });\n      }\n    });\n\n    // Simple BFS pathfinding\n    const queue = [{\n      node: start,\n      path: [],\n      totalCost: 0,\n      totalTime: 0\n    }];\n    const visited = new Set();\n    while (queue.length > 0) {\n      const current = queue.shift();\n      if (current.node === end) {\n        return {\n          path: current.path,\n          totalCost: current.totalCost,\n          totalTime: current.totalTime\n        };\n      }\n      if (visited.has(current.node)) continue;\n      visited.add(current.node);\n      const neighbors = graph.get(current.node) || [];\n      neighbors.forEach(neighbor => {\n        if (!visited.has(neighbor.to)) {\n          queue.push({\n            node: neighbor.to,\n            path: [...current.path, {\n              from: current.node,\n              to: neighbor.to,\n              vehicle: neighbor.vehicle,\n              distance: neighbor.distance,\n              time: neighbor.time,\n              cost: neighbor.cost\n            }],\n            totalCost: current.totalCost + neighbor.cost,\n            totalTime: current.totalTime + neighbor.time\n          });\n        }\n      });\n    }\n    return null;\n  };\n\n  // Optimize routes\n  const optimizeRoutes = () => {\n    if (networkData.nodes.length === 0) {\n      alert('Please generate a network first!');\n      return;\n    }\n    setIsOptimizing(true);\n    setTimeout(() => {\n      const routes = [];\n      let totalCost = 0;\n      let totalTime = 0;\n      let totalDistance = 0;\n      networkData.packages.forEach(pkg => {\n        const route = findOptimalRoute(pkg.from, pkg.to);\n        if (route) {\n          routes.push({\n            packageId: pkg.id,\n            path: route.path,\n            totalCost: route.totalCost,\n            totalTime: route.totalTime\n          });\n          totalCost += route.totalCost;\n          totalTime += route.totalTime;\n          totalDistance += route.path.reduce((sum, step) => sum + step.distance, 0);\n        }\n      });\n      const avgHops = routes.reduce((sum, route) => sum + route.path.length, 0) / routes.length;\n      setOptimizationResults({\n        routes,\n        totalCost,\n        totalTime,\n        totalDistance,\n        avgHops,\n        algorithm: config.algorithm,\n        priority: config.priority\n      });\n      setIsOptimizing(false);\n    }, 1500);\n  };\n\n  // Simulate delivery\n  const simulateDelivery = () => {\n    if (!optimizationResults) {\n      alert('Please optimize routes first!');\n      return;\n    }\n    setIsSimulating(true);\n    setTimeout(() => {\n      setIsSimulating(false);\n      alert('🎉 All deliveries completed successfully!');\n    }, 3000);\n  };\n  useEffect(() => {\n    generateDeliveryNetwork();\n  }, []);\n  useEffect(() => {\n    renderNetwork();\n  }, [networkData]);\n  const algorithmDescriptions = {\n    dijkstra: \"Dijkstra's Algorithm finds the shortest path by systematically exploring all possible routes and maintaining the minimum distance to each node.\",\n    astar: \"A* Search uses heuristics to guide the search towards the goal, making it more efficient than Dijkstra for single-destination pathfinding.\",\n    genetic: \"Genetic Algorithm evolves solutions through selection, crossover, and mutation to find optimal multi-route configurations.\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-slate-50 to-blue-50 p-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl font-bold text-gray-800 mb-2\",\n          children: \"\\uD83D\\uDE9A Dynamic Multi-Hop Delivery Planning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xl text-gray-600\",\n          children: \"Optimizing last-mile delivery through intelligent route segmentation and vehicle handoffs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            children: /*#__PURE__*/_jsxDEV(CardTitle, {\n              className: \"flex items-center gap-2\",\n              children: \"\\uD83C\\uDFAF Delivery Configuration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-2\",\n                children: \"Number of Packages:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: config.packages,\n                onChange: e => setConfig({\n                  ...config,\n                  packages: e.target.value\n                }),\n                min: \"1\",\n                max: \"20\",\n                className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-2\",\n                children: \"Traffic Congestion Level:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: config.congestion,\n                onChange: e => setConfig({\n                  ...config,\n                  congestion: e.target.value\n                }),\n                className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"low\",\n                  children: \"Low (20% slower)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"medium\",\n                  children: \"Medium (50% slower)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"high\",\n                  children: \"High (100% slower)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-2\",\n                children: \"Delivery Priority:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: config.priority,\n                onChange: e => setConfig({\n                  ...config,\n                  priority: e.target.value\n                }),\n                className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"cost\",\n                  children: \"Minimize Cost\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"time\",\n                  children: \"Minimize Time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"balanced\",\n                  children: \"Balanced\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-2\",\n                children: \"Optimization Algorithm:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: config.algorithm,\n                onChange: e => setConfig({\n                  ...config,\n                  algorithm: e.target.value\n                }),\n                className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"dijkstra\",\n                  children: \"Dijkstra's Algorithm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"astar\",\n                  children: \"A* Search\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"genetic\",\n                  children: \"Genetic Algorithm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-wrap gap-2 pt-4\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: generateDeliveryNetwork,\n                children: \"\\uD83C\\uDFD7\\uFE0F Generate Network\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: optimizeRoutes,\n                disabled: isOptimizing,\n                children: isOptimizing ? '⏳ Optimizing...' : '⚡ Optimize Routes'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: simulateDelivery,\n                disabled: isSimulating,\n                children: isSimulating ? '🚀 Simulating...' : '🚀 Simulate Delivery'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            children: /*#__PURE__*/_jsxDEV(CardTitle, {\n              children: \"\\uD83D\\uDCCA Network Visualization\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-full h-96 border-2 border-gray-200 rounded-lg bg-gray-50 relative overflow-hidden\",\n              children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n                ref: canvasRef,\n                width: 800,\n                height: 400,\n                className: \"w-full h-full\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 17\n      }, this), optimizationResults && /*#__PURE__*/_jsxDEV(Card, {\n        className: \"mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: /*#__PURE__*/_jsxDEV(CardTitle, {\n            children: \"\\uD83D\\uDCC8 Optimization Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gradient-to-r from-blue-100 to-blue-200 p-4 rounded-lg text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-2xl font-bold text-blue-800\",\n                children: [\"$\", optimizationResults.totalCost.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-blue-600 text-sm\",\n                children: \"Total Cost\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gradient-to-r from-green-100 to-green-200 p-4 rounded-lg text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-2xl font-bold text-green-800\",\n                children: [optimizationResults.totalTime.toFixed(1), \"h\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-green-600 text-sm\",\n                children: \"Total Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gradient-to-r from-purple-100 to-purple-200 p-4 rounded-lg text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-2xl font-bold text-purple-800\",\n                children: optimizationResults.avgHops.toFixed(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-purple-600 text-sm\",\n                children: \"Avg Hops\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gradient-to-r from-orange-100 to-orange-200 p-4 rounded-lg text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-2xl font-bold text-orange-800\",\n                children: [optimizationResults.totalDistance.toFixed(1), \"km\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-orange-600 text-sm\",\n                children: \"Total Distance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold text-gray-800 mb-4\",\n              children: \"\\uD83D\\uDEE3\\uFE0F Optimized Routes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 33\n            }, this), optimizationResults.routes.map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-50 p-4 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"font-semibold text-gray-800 mb-2\",\n                children: [\"\\uD83D\\uDCE6 \", route.packageId, \"(\", route.path.length, \" hops \\u2022 $\", route.totalCost.toFixed(2), \" \\u2022 \", route.totalTime.toFixed(1), \"h)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-2\",\n                children: route.path.map((step, index) => {\n                  const vehicle = vehicleTypes[step.vehicle];\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center gap-3 p-2 bg-white rounded\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-lg\",\n                      children: vehicle.emoji\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 495,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex-1\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"font-medium text-sm\",\n                        children: [step.vehicle.toUpperCase(), \": \", step.from, \" \\u2192 \", step.to]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 497,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-xs text-gray-600\",\n                        children: [step.distance.toFixed(1), \"km \\u2022 \", step.time.toFixed(1), \"h \\u2022 $\", step.cost.toFixed(2)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 500,\n                        columnNumber: 61\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 496,\n                      columnNumber: 57\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 494,\n                    columnNumber: 53\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 41\n              }, this)]\n            }, route.packageId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-6 p-4 bg-green-50 border-l-4 border-green-500 rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"font-semibold text-green-800\",\n              children: [\"Algorithm: \", optimizationResults.algorithm.toUpperCase(), \" (\", optimizationResults.priority, \" priority)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-green-700 text-sm mt-1\",\n              children: algorithmDescriptions[optimizationResults.algorithm]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 335,\n    columnNumber: 9\n  }, this);\n};\n_s(MultiHopDelivery, \"ESnzba7d0f8RMODeWRy+8LRcqxY=\");\n_c = MultiHopDelivery;\nexport default MultiHopDelivery;\nvar _c;\n$RefreshReg$(_c, \"MultiHopDelivery\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Card","CardContent","CardHeader","CardTitle","Button","jsxDEV","_jsxDEV","MultiHopDelivery","_s","config","setConfig","packages","congestion","priority","algorithm","networkData","setNetworkData","nodes","edges","routes","optimizationResults","setOptimizationResults","isOptimizing","setIsOptimizing","isSimulating","setIsSimulating","canvasRef","vehicleTypes","bike","emoji","speed","capacity","costPerKm","trafficImpact","maxRange","fuelCost","scooter","van","truck","nodeTypes","warehouse","color","hub","transfer","customer","generateDeliveryNetwork","numPackages","parseInt","id","type","x","y","maxCustomers","Math","min","i","push","floor","from","to","vehicle","transferPoint","customerNode","random","weight","renderNetwork","canvas","current","ctx","getContext","rect","getBoundingClientRect","clearRect","width","height","forEach","edge","fromNode","find","n","toNode","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","node","nodeType","arc","PI","fillStyle","fill","font","textAlign","fillText","calculateDistance","node1","node2","dx","dy","sqrt","findOptimalRoute","start","end","graph","Map","set","distance","get","time","cost","queue","path","totalCost","totalTime","visited","Set","length","shift","has","add","neighbors","neighbor","optimizeRoutes","alert","setTimeout","totalDistance","pkg","route","packageId","reduce","sum","step","avgHops","simulateDelivery","algorithmDescriptions","dijkstra","astar","genetic","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","max","onClick","disabled","ref","toFixed","map","index","toUpperCase","_c","$RefreshReg$"],"sources":["C:/Users/jashi/OneDrive/Desktop/Sparkathon/walmart-spark/src/components/MultiHopDelivery.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from './ui/card';\r\nimport { Button } from './ui/button';\r\n\r\nconst MultiHopDelivery = () => {\r\n    const [config, setConfig] = useState({\r\n        packages: 5,\r\n        congestion: 'medium',\r\n        priority: 'time',\r\n        algorithm: 'astar'\r\n    });\r\n    \r\n    const [networkData, setNetworkData] = useState({\r\n        nodes: [],\r\n        edges: [],\r\n        packages: [],\r\n        routes: []\r\n    });\r\n    \r\n    const [optimizationResults, setOptimizationResults] = useState(null);\r\n    const [isOptimizing, setIsOptimizing] = useState(false);\r\n    const [isSimulating, setIsSimulating] = useState(false);\r\n    \r\n    const canvasRef = useRef(null);\r\n\r\n    // Vehicle types with characteristics\r\n    const vehicleTypes = {\r\n        bike: { \r\n            emoji: '🚲', \r\n            speed: 12,\r\n            capacity: 3,\r\n            costPerKm: 1.5,\r\n            trafficImpact: 0.1,\r\n            maxRange: 5,\r\n            fuelCost: 0\r\n        },\r\n        scooter: { \r\n            emoji: '🛵', \r\n            speed: 22,\r\n            capacity: 8,\r\n            costPerKm: 2.5,\r\n            trafficImpact: 0.3,\r\n            maxRange: 15,\r\n            fuelCost: 0.8\r\n        },\r\n        van: { \r\n            emoji: '🚚', \r\n            speed: 28,\r\n            capacity: 50,\r\n            costPerKm: 6.5,\r\n            trafficImpact: 0.8,\r\n            maxRange: 100,\r\n            fuelCost: 1.2\r\n        },\r\n        truck: { \r\n            emoji: '🚛', \r\n            speed: 25,\r\n            capacity: 150,\r\n            costPerKm: 12.0,\r\n            trafficImpact: 1.0,\r\n            maxRange: 200,\r\n            fuelCost: 2.5\r\n        }\r\n    };\r\n\r\n    const nodeTypes = {\r\n        warehouse: { emoji: '🏭', color: '#e53e3e' },\r\n        hub: { emoji: '🏢', color: '#3182ce' },\r\n        transfer: { emoji: '🔄', color: '#38a169' },\r\n        customer: { emoji: '🏠', color: '#d69e2e' }\r\n    };\r\n\r\n    // Generate delivery network\r\n    const generateDeliveryNetwork = () => {\r\n        const numPackages = parseInt(config.packages);\r\n        \r\n        // Generate nodes\r\n        const nodes = [\r\n            { id: 'warehouse', type: 'warehouse', x: 50, y: 250 },\r\n            { id: 'hub1', type: 'hub', x: 200, y: 150 },\r\n            { id: 'hub2', type: 'hub', x: 200, y: 350 },\r\n            { id: 'transfer1', type: 'transfer', x: 350, y: 100 },\r\n            { id: 'transfer2', type: 'transfer', x: 350, y: 200 },\r\n            { id: 'transfer3', type: 'transfer', x: 350, y: 300 },\r\n            { id: 'transfer4', type: 'transfer', x: 350, y: 400 }\r\n        ];\r\n\r\n        // Generate customer nodes\r\n        const maxCustomers = Math.min(numPackages, 20);\r\n        for (let i = 0; i < maxCustomers; i++) {\r\n            nodes.push({\r\n                id: `customer${i + 1}`,\r\n                type: 'customer',\r\n                x: 500 + (i % 4) * 80,\r\n                y: 80 + Math.floor(i / 4) * 70\r\n            });\r\n        }\r\n\r\n        // Generate edges\r\n        const edges = [\r\n            { from: 'warehouse', to: 'hub1', vehicle: 'truck' },\r\n            { from: 'warehouse', to: 'hub2', vehicle: 'truck' },\r\n            { from: 'hub1', to: 'transfer1', vehicle: 'van' },\r\n            { from: 'hub1', to: 'transfer2', vehicle: 'van' },\r\n            { from: 'hub2', to: 'transfer3', vehicle: 'van' },\r\n            { from: 'hub2', to: 'transfer4', vehicle: 'van' },\r\n            { from: 'hub1', to: 'hub2', vehicle: 'van' },\r\n            { from: 'transfer1', to: 'transfer2', vehicle: 'scooter' },\r\n            { from: 'transfer2', to: 'transfer3', vehicle: 'scooter' },\r\n            { from: 'transfer3', to: 'transfer4', vehicle: 'scooter' }\r\n        ];\r\n\r\n        // Connect transfer points to customers\r\n        for (let i = 0; i < maxCustomers; i++) {\r\n            const transferPoint = `transfer${(i % 4) + 1}`;\r\n            const customerNode = `customer${i + 1}`;\r\n            const vehicle = Math.random() < 0.7 ? 'bike' : 'scooter';\r\n            \r\n            edges.push({ from: transferPoint, to: customerNode, vehicle });\r\n        }\r\n\r\n        // Generate packages\r\n        const packages = [];\r\n        for (let i = 0; i < maxCustomers; i++) {\r\n            packages.push({\r\n                id: `pkg${i + 1}`,\r\n                from: 'warehouse',\r\n                to: `customer${i + 1}`,\r\n                weight: Math.random() * 5 + 1,\r\n                priority: Math.random() < 0.3 ? 'high' : 'normal'\r\n            });\r\n        }\r\n\r\n        setNetworkData({ nodes, edges, packages, routes: [] });\r\n        setOptimizationResults(null);\r\n    };\r\n\r\n    // Render network visualization\r\n    const renderNetwork = () => {\r\n        const canvas = canvasRef.current;\r\n        if (!canvas) return;\r\n        \r\n        const ctx = canvas.getContext('2d');\r\n        const rect = canvas.getBoundingClientRect();\r\n        \r\n        // Clear canvas\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        \r\n        // Draw edges\r\n        networkData.edges.forEach(edge => {\r\n            const fromNode = networkData.nodes.find(n => n.id === edge.from);\r\n            const toNode = networkData.nodes.find(n => n.id === edge.to);\r\n            \r\n            if (fromNode && toNode) {\r\n                ctx.beginPath();\r\n                ctx.moveTo(fromNode.x, fromNode.y);\r\n                ctx.lineTo(toNode.x, toNode.y);\r\n                ctx.strokeStyle = '#cbd5e0';\r\n                ctx.lineWidth = 3;\r\n                ctx.stroke();\r\n            }\r\n        });\r\n\r\n        // Draw nodes\r\n        networkData.nodes.forEach(node => {\r\n            const nodeType = nodeTypes[node.type];\r\n            if (nodeType) {\r\n                // Draw circle\r\n                ctx.beginPath();\r\n                ctx.arc(node.x, node.y, 20, 0, 2 * Math.PI);\r\n                ctx.fillStyle = nodeType.color;\r\n                ctx.fill();\r\n                \r\n                // Draw emoji (simplified as text)\r\n                ctx.fillStyle = 'white';\r\n                ctx.font = '16px Arial';\r\n                ctx.textAlign = 'center';\r\n                ctx.fillText(nodeType.emoji, node.x, node.y + 5);\r\n            }\r\n        });\r\n    };\r\n\r\n    // Calculate distance between nodes\r\n    const calculateDistance = (node1, node2) => {\r\n        const dx = node1.x - node2.x;\r\n        const dy = node1.y - node2.y;\r\n        return Math.sqrt(dx * dx + dy * dy) / 10;\r\n    };\r\n\r\n    // Simple pathfinding algorithm (simplified A*)\r\n    const findOptimalRoute = (start, end) => {\r\n        const graph = new Map();\r\n        \r\n        // Build graph\r\n        networkData.nodes.forEach(node => {\r\n            graph.set(node.id, []);\r\n        });\r\n        \r\n        networkData.edges.forEach(edge => {\r\n            const fromNode = networkData.nodes.find(n => n.id === edge.from);\r\n            const toNode = networkData.nodes.find(n => n.id === edge.to);\r\n            \r\n            if (fromNode && toNode) {\r\n                const distance = calculateDistance(fromNode, toNode);\r\n                const vehicle = vehicleTypes[edge.vehicle];\r\n                \r\n                graph.get(edge.from).push({\r\n                    to: edge.to,\r\n                    distance,\r\n                    time: distance / vehicle.speed,\r\n                    cost: distance * vehicle.costPerKm,\r\n                    vehicle: edge.vehicle\r\n                });\r\n            }\r\n        });\r\n\r\n        // Simple BFS pathfinding\r\n        const queue = [{ node: start, path: [], totalCost: 0, totalTime: 0 }];\r\n        const visited = new Set();\r\n        \r\n        while (queue.length > 0) {\r\n            const current = queue.shift();\r\n            \r\n            if (current.node === end) {\r\n                return {\r\n                    path: current.path,\r\n                    totalCost: current.totalCost,\r\n                    totalTime: current.totalTime\r\n                };\r\n            }\r\n            \r\n            if (visited.has(current.node)) continue;\r\n            visited.add(current.node);\r\n            \r\n            const neighbors = graph.get(current.node) || [];\r\n            neighbors.forEach(neighbor => {\r\n                if (!visited.has(neighbor.to)) {\r\n                    queue.push({\r\n                        node: neighbor.to,\r\n                        path: [...current.path, {\r\n                            from: current.node,\r\n                            to: neighbor.to,\r\n                            vehicle: neighbor.vehicle,\r\n                            distance: neighbor.distance,\r\n                            time: neighbor.time,\r\n                            cost: neighbor.cost\r\n                        }],\r\n                        totalCost: current.totalCost + neighbor.cost,\r\n                        totalTime: current.totalTime + neighbor.time\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        \r\n        return null;\r\n    };\r\n\r\n    // Optimize routes\r\n    const optimizeRoutes = () => {\r\n        if (networkData.nodes.length === 0) {\r\n            alert('Please generate a network first!');\r\n            return;\r\n        }\r\n\r\n        setIsOptimizing(true);\r\n        \r\n        setTimeout(() => {\r\n            const routes = [];\r\n            let totalCost = 0;\r\n            let totalTime = 0;\r\n            let totalDistance = 0;\r\n\r\n            networkData.packages.forEach(pkg => {\r\n                const route = findOptimalRoute(pkg.from, pkg.to);\r\n                if (route) {\r\n                    routes.push({\r\n                        packageId: pkg.id,\r\n                        path: route.path,\r\n                        totalCost: route.totalCost,\r\n                        totalTime: route.totalTime\r\n                    });\r\n                    \r\n                    totalCost += route.totalCost;\r\n                    totalTime += route.totalTime;\r\n                    totalDistance += route.path.reduce((sum, step) => sum + step.distance, 0);\r\n                }\r\n            });\r\n\r\n            const avgHops = routes.reduce((sum, route) => sum + route.path.length, 0) / routes.length;\r\n\r\n            setOptimizationResults({\r\n                routes,\r\n                totalCost,\r\n                totalTime,\r\n                totalDistance,\r\n                avgHops,\r\n                algorithm: config.algorithm,\r\n                priority: config.priority\r\n            });\r\n\r\n            setIsOptimizing(false);\r\n        }, 1500);\r\n    };\r\n\r\n    // Simulate delivery\r\n    const simulateDelivery = () => {\r\n        if (!optimizationResults) {\r\n            alert('Please optimize routes first!');\r\n            return;\r\n        }\r\n\r\n        setIsSimulating(true);\r\n        \r\n        setTimeout(() => {\r\n            setIsSimulating(false);\r\n            alert('🎉 All deliveries completed successfully!');\r\n        }, 3000);\r\n    };\r\n\r\n    useEffect(() => {\r\n        generateDeliveryNetwork();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        renderNetwork();\r\n    }, [networkData]);\r\n\r\n    const algorithmDescriptions = {\r\n        dijkstra: \"Dijkstra's Algorithm finds the shortest path by systematically exploring all possible routes and maintaining the minimum distance to each node.\",\r\n        astar: \"A* Search uses heuristics to guide the search towards the goal, making it more efficient than Dijkstra for single-destination pathfinding.\",\r\n        genetic: \"Genetic Algorithm evolves solutions through selection, crossover, and mutation to find optimal multi-route configurations.\"\r\n    };\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-blue-50 p-6\">\r\n            <div className=\"max-w-7xl mx-auto\">\r\n                <div className=\"text-center mb-8\">\r\n                    <h1 className=\"text-4xl font-bold text-gray-800 mb-2\">\r\n                        🚚 Dynamic Multi-Hop Delivery Planning\r\n                    </h1>\r\n                    <p className=\"text-xl text-gray-600\">\r\n                        Optimizing last-mile delivery through intelligent route segmentation and vehicle handoffs\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8\">\r\n                    {/* Configuration Panel */}\r\n                    <Card>\r\n                        <CardHeader>\r\n                            <CardTitle className=\"flex items-center gap-2\">\r\n                                🎯 Delivery Configuration\r\n                            </CardTitle>\r\n                        </CardHeader>\r\n                        <CardContent className=\"space-y-4\">\r\n                            <div>\r\n                                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                                    Number of Packages:\r\n                                </label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={config.packages}\r\n                                    onChange={(e) => setConfig({...config, packages: e.target.value})}\r\n                                    min=\"1\"\r\n                                    max=\"20\"\r\n                                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div>\r\n                                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                                    Traffic Congestion Level:\r\n                                </label>\r\n                                <select\r\n                                    value={config.congestion}\r\n                                    onChange={(e) => setConfig({...config, congestion: e.target.value})}\r\n                                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                                >\r\n                                    <option value=\"low\">Low (20% slower)</option>\r\n                                    <option value=\"medium\">Medium (50% slower)</option>\r\n                                    <option value=\"high\">High (100% slower)</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                                    Delivery Priority:\r\n                                </label>\r\n                                <select\r\n                                    value={config.priority}\r\n                                    onChange={(e) => setConfig({...config, priority: e.target.value})}\r\n                                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                                >\r\n                                    <option value=\"cost\">Minimize Cost</option>\r\n                                    <option value=\"time\">Minimize Time</option>\r\n                                    <option value=\"balanced\">Balanced</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                                    Optimization Algorithm:\r\n                                </label>\r\n                                <select\r\n                                    value={config.algorithm}\r\n                                    onChange={(e) => setConfig({...config, algorithm: e.target.value})}\r\n                                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                                >\r\n                                    <option value=\"dijkstra\">Dijkstra's Algorithm</option>\r\n                                    <option value=\"astar\">A* Search</option>\r\n                                    <option value=\"genetic\">Genetic Algorithm</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"flex flex-wrap gap-2 pt-4\">\r\n                                <Button onClick={generateDeliveryNetwork}>\r\n                                    🏗️ Generate Network\r\n                                </Button>\r\n                                <Button onClick={optimizeRoutes} disabled={isOptimizing}>\r\n                                    {isOptimizing ? '⏳ Optimizing...' : '⚡ Optimize Routes'}\r\n                                </Button>\r\n                                <Button onClick={simulateDelivery} disabled={isSimulating}>\r\n                                    {isSimulating ? '🚀 Simulating...' : '🚀 Simulate Delivery'}\r\n                                </Button>\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n\r\n                    {/* Network Visualization */}\r\n                    <Card>\r\n                        <CardHeader>\r\n                            <CardTitle>📊 Network Visualization</CardTitle>\r\n                        </CardHeader>\r\n                        <CardContent>\r\n                            <div className=\"w-full h-96 border-2 border-gray-200 rounded-lg bg-gray-50 relative overflow-hidden\">\r\n                                <canvas\r\n                                    ref={canvasRef}\r\n                                    width={800}\r\n                                    height={400}\r\n                                    className=\"w-full h-full\"\r\n                                />\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n                </div>\r\n\r\n                {/* Optimization Results */}\r\n                {optimizationResults && (\r\n                    <Card className=\"mb-8\">\r\n                        <CardHeader>\r\n                            <CardTitle>📈 Optimization Results</CardTitle>\r\n                        </CardHeader>\r\n                        <CardContent>\r\n                            {/* Metrics */}\r\n                            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\r\n                                <div className=\"bg-gradient-to-r from-blue-100 to-blue-200 p-4 rounded-lg text-center\">\r\n                                    <div className=\"text-2xl font-bold text-blue-800\">\r\n                                        ${optimizationResults.totalCost.toFixed(2)}\r\n                                    </div>\r\n                                    <div className=\"text-blue-600 text-sm\">Total Cost</div>\r\n                                </div>\r\n                                <div className=\"bg-gradient-to-r from-green-100 to-green-200 p-4 rounded-lg text-center\">\r\n                                    <div className=\"text-2xl font-bold text-green-800\">\r\n                                        {optimizationResults.totalTime.toFixed(1)}h\r\n                                    </div>\r\n                                    <div className=\"text-green-600 text-sm\">Total Time</div>\r\n                                </div>\r\n                                <div className=\"bg-gradient-to-r from-purple-100 to-purple-200 p-4 rounded-lg text-center\">\r\n                                    <div className=\"text-2xl font-bold text-purple-800\">\r\n                                        {optimizationResults.avgHops.toFixed(1)}\r\n                                    </div>\r\n                                    <div className=\"text-purple-600 text-sm\">Avg Hops</div>\r\n                                </div>\r\n                                <div className=\"bg-gradient-to-r from-orange-100 to-orange-200 p-4 rounded-lg text-center\">\r\n                                    <div className=\"text-2xl font-bold text-orange-800\">\r\n                                        {optimizationResults.totalDistance.toFixed(1)}km\r\n                                    </div>\r\n                                    <div className=\"text-orange-600 text-sm\">Total Distance</div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Route Details */}\r\n                            <div className=\"space-y-4\">\r\n                                <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">🛣️ Optimized Routes</h3>\r\n                                {optimizationResults.routes.map(route => (\r\n                                    <div key={route.packageId} className=\"bg-gray-50 p-4 rounded-lg\">\r\n                                        <h4 className=\"font-semibold text-gray-800 mb-2\">\r\n                                            📦 {route.packageId} \r\n                                            ({route.path.length} hops • ${route.totalCost.toFixed(2)} • {route.totalTime.toFixed(1)}h)\r\n                                        </h4>\r\n                                        <div className=\"space-y-2\">\r\n                                            {route.path.map((step, index) => {\r\n                                                const vehicle = vehicleTypes[step.vehicle];\r\n                                                return (\r\n                                                    <div key={index} className=\"flex items-center gap-3 p-2 bg-white rounded\">\r\n                                                        <span className=\"text-lg\">{vehicle.emoji}</span>\r\n                                                        <div className=\"flex-1\">\r\n                                                            <div className=\"font-medium text-sm\">\r\n                                                                {step.vehicle.toUpperCase()}: {step.from} → {step.to}\r\n                                                            </div>\r\n                                                            <div className=\"text-xs text-gray-600\">\r\n                                                                {step.distance.toFixed(1)}km • {step.time.toFixed(1)}h • ${step.cost.toFixed(2)}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                );\r\n                                            })}\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n\r\n                            {/* Algorithm Info */}\r\n                            <div className=\"mt-6 p-4 bg-green-50 border-l-4 border-green-500 rounded\">\r\n                                <h4 className=\"font-semibold text-green-800\">\r\n                                    Algorithm: {optimizationResults.algorithm.toUpperCase()} ({optimizationResults.priority} priority)\r\n                                </h4>\r\n                                <p className=\"text-green-700 text-sm mt-1\">\r\n                                    {algorithmDescriptions[optimizationResults.algorithm]}\r\n                                </p>\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MultiHopDelivery;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}