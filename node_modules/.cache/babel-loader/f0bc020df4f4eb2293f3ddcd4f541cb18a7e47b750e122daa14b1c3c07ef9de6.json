{"ast":null,"code":"import axios from 'axios';\nimport io from 'socket.io-client';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: `${API_BASE_URL}/api`,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Socket.IO connection\nlet socket = null;\n\n// Initialize socket connection\nexport const initializeSocket = () => {\n  if (!socket) {\n    socket = io(API_BASE_URL, {\n      transports: ['websocket', 'polling'],\n      autoConnect: true\n    });\n    socket.on('connect', () => {\n      console.log('Connected to backend via Socket.IO');\n    });\n    socket.on('disconnect', () => {\n      console.log('Disconnected from backend');\n    });\n    socket.on('connect_error', error => {\n      console.error('Socket connection error:', error);\n    });\n  }\n  return socket;\n};\n\n// Get socket instance\nexport const getSocket = () => {\n  if (!socket) {\n    return initializeSocket();\n  }\n  return socket;\n};\n\n// API Service functions\nexport const apiService = {\n  // Dashboard related APIs\n  getDashboardData: async () => {\n    try {\n      const response = await api.get('/dashboard-data');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching dashboard data:', error);\n      throw error;\n    }\n  },\n  // Route optimization\n  optimizeRoutes: async optimizationData => {\n    try {\n      const response = await api.post('/optimize-routes', optimizationData);\n      return response.data;\n    } catch (error) {\n      console.error('Error optimizing routes:', error);\n      throw error;\n    }\n  },\n  // Multi-hop delivery planning\n  planMultiHopDelivery: async deliveryConfig => {\n    try {\n      const response = await api.post('/multi-hop-delivery', deliveryConfig);\n      return response.data;\n    } catch (error) {\n      console.error('Error planning multi-hop delivery:', error);\n      throw error;\n    }\n  },\n  // Multi-agent workflow\n  triggerAgentWorkflow: async workflowData => {\n    try {\n      const response = await api.post('/agent-workflow', workflowData);\n      return response.data;\n    } catch (error) {\n      console.error('Error triggering agent workflow:', error);\n      throw error;\n    }\n  },\n  // Real-time data subscription\n  subscribeToRealTimeUpdates: callback => {\n    const socketInstance = getSocket();\n    socketInstance.on('data_update', data => {\n      callback(data);\n    });\n    return () => {\n      socketInstance.off('data_update');\n    };\n  },\n  // Driver tracking\n  subscribeToDriverTracking: callback => {\n    const socketInstance = getSocket();\n    socketInstance.on('driver_tracking', data => {\n      callback(data);\n    });\n    return () => {\n      socketInstance.off('driver_tracking');\n    };\n  },\n  // Order updates\n  subscribeToOrderUpdates: callback => {\n    const socketInstance = getSocket();\n    socketInstance.on('order_updates', data => {\n      callback(data);\n    });\n    return () => {\n      socketInstance.off('order_updates');\n    };\n  },\n  // Route updates\n  subscribeToRouteUpdates: callback => {\n    const socketInstance = getSocket();\n    socketInstance.on('route_updates', data => {\n      callback(data);\n    });\n    return () => {\n      socketInstance.off('route_updates');\n    };\n  }\n};\n\n// Request interceptor for adding auth token if needed\napi.interceptors.request.use(config => {\n  // Add auth token if available\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  if (error.response) {\n    // Server responded with error status\n    console.error('API Error:', error.response.status, error.response.data);\n  } else if (error.request) {\n    // Request was made but no response received\n    console.error('Network Error:', error.request);\n  } else {\n    // Something else happened\n    console.error('Error:', error.message);\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","io","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","headers","socket","initializeSocket","transports","autoConnect","on","console","log","error","getSocket","apiService","getDashboardData","response","get","data","optimizeRoutes","optimizationData","post","planMultiHopDelivery","deliveryConfig","triggerAgentWorkflow","workflowData","subscribeToRealTimeUpdates","callback","socketInstance","off","subscribeToDriverTracking","subscribeToOrderUpdates","subscribeToRouteUpdates","interceptors","request","use","config","token","localStorage","getItem","Authorization","Promise","reject","status","message"],"sources":["C:/Users/jashi/OneDrive/Desktop/Sparkathon/walmart-spark/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\nimport io from 'socket.io-client';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\n// Create axios instance with default config\r\nconst api = axios.create({\r\n  baseURL: `${API_BASE_URL}/api`,\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Socket.IO connection\r\nlet socket = null;\r\n\r\n// Initialize socket connection\r\nexport const initializeSocket = () => {\r\n  if (!socket) {\r\n    socket = io(API_BASE_URL, {\r\n      transports: ['websocket', 'polling'],\r\n      autoConnect: true,\r\n    });\r\n\r\n    socket.on('connect', () => {\r\n      console.log('Connected to backend via Socket.IO');\r\n    });\r\n\r\n    socket.on('disconnect', () => {\r\n      console.log('Disconnected from backend');\r\n    });\r\n\r\n    socket.on('connect_error', (error) => {\r\n      console.error('Socket connection error:', error);\r\n    });\r\n  }\r\n  return socket;\r\n};\r\n\r\n// Get socket instance\r\nexport const getSocket = () => {\r\n  if (!socket) {\r\n    return initializeSocket();\r\n  }\r\n  return socket;\r\n};\r\n\r\n// API Service functions\r\nexport const apiService = {\r\n  // Dashboard related APIs\r\n  getDashboardData: async () => {\r\n    try {\r\n      const response = await api.get('/dashboard-data');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching dashboard data:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Route optimization\r\n  optimizeRoutes: async (optimizationData) => {\r\n    try {\r\n      const response = await api.post('/optimize-routes', optimizationData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error optimizing routes:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Multi-hop delivery planning\r\n  planMultiHopDelivery: async (deliveryConfig) => {\r\n    try {\r\n      const response = await api.post('/multi-hop-delivery', deliveryConfig);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error planning multi-hop delivery:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Multi-agent workflow\r\n  triggerAgentWorkflow: async (workflowData) => {\r\n    try {\r\n      const response = await api.post('/agent-workflow', workflowData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error triggering agent workflow:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Real-time data subscription\r\n  subscribeToRealTimeUpdates: (callback) => {\r\n    const socketInstance = getSocket();\r\n    \r\n    socketInstance.on('data_update', (data) => {\r\n      callback(data);\r\n    });\r\n\r\n    return () => {\r\n      socketInstance.off('data_update');\r\n    };\r\n  },\r\n\r\n  // Driver tracking\r\n  subscribeToDriverTracking: (callback) => {\r\n    const socketInstance = getSocket();\r\n    \r\n    socketInstance.on('driver_tracking', (data) => {\r\n      callback(data);\r\n    });\r\n\r\n    return () => {\r\n      socketInstance.off('driver_tracking');\r\n    };\r\n  },\r\n\r\n  // Order updates\r\n  subscribeToOrderUpdates: (callback) => {\r\n    const socketInstance = getSocket();\r\n    \r\n    socketInstance.on('order_updates', (data) => {\r\n      callback(data);\r\n    });\r\n\r\n    return () => {\r\n      socketInstance.off('order_updates');\r\n    };\r\n  },\r\n\r\n  // Route updates\r\n  subscribeToRouteUpdates: (callback) => {\r\n    const socketInstance = getSocket();\r\n    \r\n    socketInstance.on('route_updates', (data) => {\r\n      callback(data);\r\n    });\r\n\r\n    return () => {\r\n      socketInstance.off('route_updates');\r\n    };\r\n  }\r\n};\r\n\r\n// Request interceptor for adding auth token if needed\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    // Add auth token if available\r\n    const token = localStorage.getItem('authToken');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor for error handling\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    if (error.response) {\r\n      // Server responded with error status\r\n      console.error('API Error:', error.response.status, error.response.data);\r\n    } else if (error.request) {\r\n      // Request was made but no response received\r\n      console.error('Network Error:', error.request);\r\n    } else {\r\n      // Something else happened\r\n      console.error('Error:', error.message);\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}